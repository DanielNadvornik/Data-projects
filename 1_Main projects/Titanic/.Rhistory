anova_mod <- rpart(Age ~ Pclass + Fare + Sex + Embarked + title, test[!is.na(test$Age), ], method = "anova")
pred <- predict(anova_mod, test[is.na(train$Age), ])
pred <- round(pred)
summary(anova_mod)
pred_t <- predict(anova_mod, test[is.na(train$Age), ])
pred_t <- round(pred_t)
test$Age <- ifelse(is.na(test$Age), pred, test$Age)
View(test)
pred_t <- predict(anova_mod, test[is.na(train$Age), ])
pred_t <- round(pred_t)
train <- read.csv("C:/Users/Daniel/Desktop/Rko/1_Dánsko/Titanic/train.csv")
test <- read.csv("C:/Users/Daniel/Desktop/Rko/1_Dánsko/Titanic/test.csv")
str(train)
head(train)
#1
train_n <- train %>% select(where(is.numeric))
hist.data.frame(train_n)
#2
missmap(train)
missmap(test)
missmap(test)
#2
anova_mod <- rpart(Age ~ Pclass + Fare + Sex + Embarked + title, train[!is.na(train$Age), ], method = "anova")
#1
train$title <- gsub('(.*, )|(\\..*)', '', train$Name)
table(train$Sex, train$title)
rare_title <- c('Dona', 'Lady', 'the Countess','Capt', 'Col', 'Don',
'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer')
train$title[train$title == 'Mlle']        <- 'Miss'
train$title[train$title == 'Ms']          <- 'Miss'
train$title[train$title == 'Mme']         <- 'Mrs'
train$title[train$title %in% rare_title]  <- 'Rare Title'
table(train$Sex, train$title)
#2
anova_mod <- rpart(Age ~ Pclass + Fare + Sex + Embarked + title, train[!is.na(train$Age), ], method = "anova")
pred <- predict(anova_mod, train[is.na(train$Age), ])
pred <- round(pred)
summary(anova_mod)
train$Age <- ifelse(is.na(train$Age), pred, train$Age)
############## test
test$title <- gsub('(.*, )|(\\..*)', '', test$Name)
table(test$Sex, test$title)
rare_title <- c('Dona', 'Lady', 'the Countess','Capt', 'Col', 'Don',
'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer')
test$title[test$title == 'Mlle']        <- 'Miss'
test$title[test$title == 'Ms']          <- 'Miss'
test$title[test$title == 'Mme']         <- 'Mrs'
test$title[test$title %in% rare_title]  <- 'Rare Title'
table(test$Sex, test$title)
#2
anova_mod_t <- rpart(Age ~ Pclass + Fare + Sex + Embarked + title, test[!is.na(test$Age), ], method = "anova")
pred_t <- predict(anova_mod, test[is.na(train$Age), ])
#2
anova_mod_t <- rpart(Age ~ Pclass + Fare + Sex + Embarked + title, test[!is.na(test$Age), ], method = "anova")
pred_t <- predict(anova_mod_t, test[is.na(train$Age), ])
pred_t <- round(pred_t)
library(tidyverse)
library(ggplot2)
library(Hmisc)
library(Amelia)
library(rpart)
library(pROC)
getwd()
train <- read.csv("C:/Users/Daniel/Desktop/Rko/1_Dánsko/Titanic/train.csv")
test <- read.csv("C:/Users/Daniel/Desktop/Rko/1_Dánsko/Titanic/test.csv")
########## Process
#Exploring the data
#1) Plotting the distributions of numerical variables
#2) Exploring the missing values of all variables
#Data manipulation
#1) Using the Name variable to define titles
#1) Imputing the missing values in Age variable with rpart
#Model development
#1)Using logistic regression model to predict binary outcome (Survived)
#2)Evaluating the model
########## Script
#Exploring the data
str(train)
head(train)
#1
train_n <- train %>% select(where(is.numeric))
hist.data.frame(train_n)
#2
missmap(train)
missmap(test)
#Data manipulation
#1
train$title <- gsub('(.*, )|(\\..*)', '', train$Name)
table(train$Sex, train$title)
rare_title <- c('Dona', 'Lady', 'the Countess','Capt', 'Col', 'Don',
'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer')
train$title[train$title == 'Mlle']        <- 'Miss'
train$title[train$title == 'Ms']          <- 'Miss'
train$title[train$title == 'Mme']         <- 'Mrs'
train$title[train$title %in% rare_title]  <- 'Rare Title'
table(train$Sex, train$title)
#2
anova_mod <- rpart(Age ~ Pclass + Fare + Sex + Embarked + title, train[!is.na(train$Age), ], method = "anova")
pred <- predict(anova_mod, train[is.na(train$Age), ])
pred <- round(pred)
summary(anova_mod)
train$Age <- ifelse(is.na(train$Age), pred, train$Age)
#Model development
#1
table(train$Survived)
sur_mod <- glm(Survived ~ Pclass + Fare + Sex + Age + title, train, family = "binomial")
summary(sur_mod)
train$pred <- predict(sur_mod, type = "response")
mean(train$pred)
train$pred <- ifelse(train$pred > 0.4, 1, 0)
#2
mean(train$Survived == train$pred)
ROC <- roc(train$Survived, train$pred)
plot(ROC, col = "green")
auc(ROC)
############## test
test$title <- gsub('(.*, )|(\\..*)', '', test$Name)
table(test$Sex, test$title)
rare_title <- c('Dona', 'Lady', 'the Countess','Capt', 'Col', 'Don',
'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer')
test$title[test$title == 'Mlle']        <- 'Miss'
test$title[test$title == 'Ms']          <- 'Miss'
test$title[test$title == 'Mme']         <- 'Mrs'
test$title[test$title %in% rare_title]  <- 'Rare Title'
table(test$Sex, test$title)
#2
anova_mod_t <- rpart(Age ~ Pclass + Fare + Sex + Embarked + title, test[!is.na(test$Age), ], method = "anova")
pred_t <- predict(anova_mod_t, test[is.na(train$Age), ])
pred_t <- round(pred_t)
summary(anova_mod)
test$Age <- ifelse(is.na(test$Age), pred, test$Age)
#Model development
#1
table(train$Survived)
sur_mod <- glm(Survived ~ Pclass + Fare + Sex + Age + title, train, family = "binomial")
summary(sur_mod)
train$pred <- predict(sur_mod, type = "response")
mean(train$pred)
train$pred <- ifelse(train$pred > 0.4, 1, 0)
#2
mean(train$Survived == train$pred)
ROC <- roc(train$Survived, train$pred)
plot(ROC, col = "green")
auc(ROC)
#2
anova_mod_t <- rpart(Age ~ Pclass + Fare + Sex + Embarked + title, test[!is.na(test$Age), ], method = "anova")
pred_t <- predict(anova_mod_t, test[is.na(train$Age), ])
summary(anova_mod_t)
test$Age <- ifelse(is.na(test$Age), pred, test$Age)
View(test)
test$Age <- ifelse(is.na(test$Age), pred_t, test$Age)
View(train)
test$title <- gsub('(.*, )|(\\..*)', '', test$Name)
table(test$Sex, test$title)
rare_title <- c('Dona', 'Lady', 'the Countess','Capt', 'Col', 'Don',
'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer')
test$title[test$title == 'Mlle']        <- 'Miss'
test$title[test$title == 'Ms']          <- 'Miss'
test$title[test$title == 'Mme']         <- 'Mrs'
test$title[test$title %in% rare_title]  <- 'Rare Title'
table(test$Sex, test$title)
#2
anova_mod_t <- rpart(Age ~ Pclass + Fare + Sex + Embarked + title, test[!is.na(test$Age), ], method = "anova")
pred_t <- predict(anova_mod_t, test[is.na(train$Age), ])
pred_t <- round(pred_t)
summary(anova_mod_t)
test$Age <- ifelse(is.na(test$Age), pred_t, test$Age)
test <- read.csv("C:/Users/Daniel/Desktop/Rko/1_Dánsko/Titanic/test.csv")
############## test
test$title <- gsub('(.*, )|(\\..*)', '', test$Name)
table(test$Sex, test$title)
rare_title <- c('Dona', 'Lady', 'the Countess','Capt', 'Col', 'Don',
'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer')
test$title[test$title == 'Mlle']        <- 'Miss'
test$title[test$title == 'Ms']          <- 'Miss'
test$title[test$title == 'Mme']         <- 'Mrs'
test$title[test$title %in% rare_title]  <- 'Rare Title'
table(test$Sex, test$title)
#2
anova_mod_t <- rpart(Age ~ Pclass + Fare + Sex + Embarked + title, test[!is.na(test$Age), ], method = "anova")
pred_t <- predict(anova_mod_t, test[is.na(train$Age), ])
pred_t <- predict(anova_mod_t, test[is.na(test$Age), ])
pred_t <- round(pred_t)
summary(anova_mod_t)
test$Age <- ifelse(is.na(test$Age), pred_t, test$Age)
#1
table(test$Survived)
#1
table(train$Survived)
train <- read.csv("C:/Users/Daniel/Desktop/Rko/1_Dánsko/Titanic/train.csv")
#2
anova_mod_t <- rpart(Age ~ Pclass + Fare + Sex + Embarked + title, test[!is.na(test$Age), ], method = "anova")
pred_t <- predict(anova_mod_t, test[is.na(test$Age), ])
pred_t <- round(pred_t)
summary(anova_mod_t)
test$Age <- ifelse(is.na(test$Age), pred_t, test$Age)
#1
sur_mod_t <- glm(Survived ~ Pclass + Fare + Sex + Age + title, test, family = "binomial")
View(test)
View(test)
#Model development
test$pred <- predict(sur_mod, type = "response")
#1
sur_mod <- glm(Survived ~ Pclass + Fare + Sex + Age + title, train, family = "binomial")
library(tidyverse)
library(ggplot2)
library(Hmisc)
library(Amelia)
library(rpart)
library(pROC)
getwd()
train <- read.csv("C:/Users/Daniel/Desktop/Rko/1_Dánsko/Titanic/train.csv")
test <- read.csv("C:/Users/Daniel/Desktop/Rko/1_Dánsko/Titanic/test.csv")
########## Process
#Exploring the data
#1) Plotting the distributions of numerical variables
#2) Exploring the missing values of all variables
#Data manipulation
#1) Using the Name variable to define titles
#1) Imputing the missing values in Age variable with rpart
#Model development
#1)Using logistic regression model to predict binary outcome (Survived)
#2)Evaluating the model
########## Script
#Exploring the data
str(train)
head(train)
#1
train_n <- train %>% select(where(is.numeric))
hist.data.frame(train_n)
#2
missmap(train)
missmap(test)
#Data manipulation
#1
train$title <- gsub('(.*, )|(\\..*)', '', train$Name)
table(train$Sex, train$title)
rare_title <- c('Dona', 'Lady', 'the Countess','Capt', 'Col', 'Don',
'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer')
train$title[train$title == 'Mlle']        <- 'Miss'
train$title[train$title == 'Ms']          <- 'Miss'
train$title[train$title == 'Mme']         <- 'Mrs'
train$title[train$title %in% rare_title]  <- 'Rare Title'
table(train$Sex, train$title)
#2
anova_mod <- rpart(Age ~ Pclass + Fare + Sex + Embarked + title, train[!is.na(train$Age), ], method = "anova")
pred <- predict(anova_mod, train[is.na(train$Age), ])
pred <- round(pred)
summary(anova_mod)
train$Age <- ifelse(is.na(train$Age), pred, train$Age)
#Model development
#1
sur_mod <- glm(Survived ~ Pclass + Fare + Sex + Age + title, train, family = "binomial")
summary(sur_mod)
train$pred <- predict(sur_mod, type = "response")
mean(train$pred)
train$pred <- ifelse(train$pred > 0.4, 1, 0)
#2
mean(train$Survived == train$pred)
ROC <- roc(train$Survived, train$pred)
plot(ROC, col = "green")
auc(ROC)
############## test
test$title <- gsub('(.*, )|(\\..*)', '', test$Name)
table(test$Sex, test$title)
rare_title <- c('Dona', 'Lady', 'the Countess','Capt', 'Col', 'Don',
'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer')
test$title[test$title == 'Mlle']        <- 'Miss'
test$title[test$title == 'Ms']          <- 'Miss'
test$title[test$title == 'Mme']         <- 'Mrs'
test$title[test$title %in% rare_title]  <- 'Rare Title'
table(test$Sex, test$title)
#2
anova_mod_t <- rpart(Age ~ Pclass + Fare + Sex + Embarked + title, test[!is.na(test$Age), ], method = "anova")
pred_t <- predict(anova_mod_t, test[is.na(test$Age), ])
pred_t <- round(pred_t)
summary(anova_mod_t)
test$Age <- ifelse(is.na(test$Age), pred_t, test$Age)
#Model development
test$pred <- predict(sur_mod, type = "response")
#Model development
test$pred <- predict(sur_mod, type = "response")
View(train)
#Model development
test$pred <- predict(sur_mod, type = "response")
#Model development
prediction <- predict(sur_mod, test)
#Model development
prediction <- predict(sur_mod, test, type = "response")
#Model development
test$pred <- predict(sur_mod, test, type = "response")
View(test)
mean(test$pred)
count(is.na(test$pred))
View(test)
test$pred <- na.omit(test$pred)
test$pred <- complete.cases(test$pred)
mean(test$pred)
View(test)
#Model development
test$pred <- predict(sur_mod, test, type = "response")
View(test)
sum(is.na(test$pred))
View(test)
test$pred[153, ] <- na.omit()
test$pred <- test$pred[-153, ]
test$pred <- test[-153, ]
test <- test[-153, ]
mean(test$pred)
test$pred <- iflese(test$pred > 0.4, 1, 0)
test$pred <- ifelse(test$pred > 0.4, 1, 0)
View(test)
#Model development
test$pred <- predict(sur_mod, test, type = "response")
sum(is.na(test$pred))
test <- test[-153, ]
mean(test$pred)
test$Survived <- ifelse(test$pred > 0.4, 1, 0)
View(test)
library(tidyverse)
library(ggplot2)
library(Hmisc)
library(Amelia)
library(rpart)
library(pROC)
getwd()
train <- read.csv("C:/Users/Daniel/Desktop/Rko/1_Dánsko/Titanic/train.csv")
test <- read.csv("C:/Users/Daniel/Desktop/Rko/1_Dánsko/Titanic/test.csv")
########## Process
#Exploring the data
#1) Plotting the distributions of numerical variables
#2) Exploring the missing values of all variables
#Data manipulation
#1) Using the Name variable to define titles
#1) Imputing the missing values in Age variable with rpart
#Model development
#1)Using logistic regression model to predict binary outcome (Survived)
#2)Evaluating the model
#Using the model for test dataset
########## Script
#Exploring the data
str(train)
head(train)
#1
train_n <- train %>% select(where(is.numeric))
hist.data.frame(train_n)
#2
missmap(train)
missmap(test)
#Data manipulation
#1
train$title <- gsub('(.*, )|(\\..*)', '', train$Name)
table(train$Sex, train$title)
rare_title <- c('Dona', 'Lady', 'the Countess','Capt', 'Col', 'Don',
'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer')
train$title[train$title == 'Mlle']        <- 'Miss'
train$title[train$title == 'Ms']          <- 'Miss'
train$title[train$title == 'Mme']         <- 'Mrs'
train$title[train$title %in% rare_title]  <- 'Rare Title'
table(train$Sex, train$title)
#2
anova_mod <- rpart(Age ~ Pclass + Fare + Sex + Embarked + title, train[!is.na(train$Age), ], method = "anova")
pred <- predict(anova_mod, train[is.na(train$Age), ])
pred <- round(pred)
summary(anova_mod)
train$Age <- ifelse(is.na(train$Age), pred, train$Age)
#Model development
#1
sur_mod <- glm(Survived ~ Pclass + Fare + Sex + Age + title, train, family = "binomial")
summary(sur_mod)
train$pred <- predict(sur_mod, type = "response")
mean(train$pred)
train$pred <- ifelse(train$pred > 0.4, 1, 0)
#2
mean(train$Survived == train$pred)
ROC <- roc(train$Survived, train$pred)
plot(ROC, col = "green")
auc(ROC)
############## test
#Data manipulation
#1
test$title <- gsub('(.*, )|(\\..*)', '', test$Name)
table(test$Sex, test$title)
rare_title <- c('Dona', 'Lady', 'the Countess','Capt', 'Col', 'Don',
'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer')
test$title[test$title == 'Mlle']        <- 'Miss'
test$title[test$title == 'Ms']          <- 'Miss'
test$title[test$title == 'Mme']         <- 'Mrs'
test$title[test$title %in% rare_title]  <- 'Rare Title'
table(test$Sex, test$title)
#2
anova_mod_t <- rpart(Age ~ Pclass + Fare + Sex + Embarked + title, test[!is.na(test$Age), ], method = "anova")
pred_t <- predict(anova_mod_t, test[is.na(test$Age), ])
pred_t <- round(pred_t)
summary(anova_mod_t)
test$Age <- ifelse(is.na(test$Age), pred_t, test$Age)
#Using the model for test dataset
test$pred <- predict(sur_mod, test, type = "response")
sum(is.na(test$pred))
test <- test[-153, ]
mean(test$pred)
test$Survived <- ifelse(test$pred > 0.4, 1, 0)
View(test)
table(test$Sex, test$Survived)
View(test)
View(train)
View(train)
View(test)
full <- rbind(test, train)
View(full)
#Visualisations
train$ide <- "T"
test$ide <- "F"
View(test)
full <- rbind(train, test)
View(full)
ggplot(full, aes(Age, fill = factor(Survived))) + geom_histogram() +
facet_wrap(~ ide)
#Visualisations
train$ide <- "Train"
test$ide <- "Test"
full <- rbind(train, test)
ggplot(full, aes(Age, fill = factor(Survived))) + geom_histogram() +
facet_wrap(~ ide)
ggplot(full, aes(Sex, fill = factor(Survived))) + geom_histogram() +
facet_wrap(~ ide)
ggplot(full, aes(Sex, fill = factor(Survived))) + stat_count() +
facet_wrap(~ ide)
ggplot(full, aes(Age, fill = factor(Survived))) + geom_histogram() +
facet_wrap(~ ide)
library(qgraph)
library(tidyverse)
library(psych)
library(psychonetrics)
data(bfi)
head(bfi)
#Data manipulation, exploratory analysis
d <- bfi[,1:25]
d$A1 <- abs(d$A1 - 7)
d$C4 <- abs(d$C4 - 7)
d$C5 <- abs(d$C5 - 7)
d$E1 <- abs(d$E1 - 7)
d$E2 <- abs(d$E2 - 7)
d$O2 <- abs(d$O2 - 7)
d$O5 <- abs(d$O5 - 7)
efa <- fa(d, 5, rotate = "oblimin")
corPlot(efa)
fa.diagram(efa)
library(psychonetrics)
model <- ggm(d)
model <- model %>% runmodel()
net <- getmatrix(model, "omega")
# plot the network:
Label <- c("A1","A2","A3","A4","A5",
"C1","C2","C3","C4","C5",
"E1","E2","E3","E4","E5",
"N1","N2","N3","N4","N5",
"O1","O2","O3","O4","O5")
Color <- c("red","red","red","red","red",
"green","green","green","green","green",
"yellow","yellow","yellow","yellow","yellow",
"blue","blue","blue","blue","blue",
"violet","violet","violet","violet","violet")
L<-averageLayout(net)
graph_net<-qgraph(net, cut=0,layout = L,
title.cex = 2,title = "Big Five Inventory network (n = 2800)",
labels = Label,
color = Color, esize=10, shape = "rectangle", vsize = 8, vsize2 = 5,
label.cex=2,
theme="colorblind", # change to colorblind, gray, Fried, classic, Reddit, Borkulo
curveAll=T)
# prune the network:
model2 <- model %>% prune(alpha = 0.01, recursive = FALSE)
net_pruned <- getmatrix(model2, "omega")
qgraph(net_pruned, cut=0,layout = L, # change to spring.cycle
title.cex = 2,title = "Big Five Inventory network (n = 2800)",
labels = Label,
color = Color, esize=10, shape = "rectangle", vsize = 8, vsize2 = 5,
label.cex=2,
theme="colorblind", # change to colorblind, gray, Fried, classic, Reddit, Borkulo
curveAll = F)
#Model fit
model %>% fit
model2 %>% fit
model2 %>% parameters
net_pruned
#Model fit
model %>% fit
model2 %>% fit
model2 %>% parameters
net_pruned
qgraph(net_pruned, cut=0,layout = L, # change to spring.cycle
title.cex = 2,title = "Big Five Inventory network (n = 2800)",
labels = Label,
color = Color, esize=10, shape = "rectangle", vsize = 8, vsize2 = 5,
label.cex=2,
theme="colorblind", # change to colorblind, gray, Fried, classic, Reddit, Borkulo
curveAll = F)
qgraph(net_pruned, cut=0,layout = L, # change to spring.cycle
title.cex = 2,title = "Big Five Inventory network (n = 2800)",
labels = Label,
color = Color, esize=10, shape = "rectangle", vsize = 8, vsize2 = 5,
label.cex=2,
theme="colorblind", # change to colorblind, gray, Fried, classic, Reddit, Borkulo
curveAll = F)
qgraph(net_pruned, cut=0,layout = L, # change to spring.cycle
title.cex = 2,title = "Big Five Inventory network (n = 2800)",
labels = Label,
color = Color, esize=10, shape = "rectangle", vsize = 8, vsize2 = 5,
label.cex=2,
theme="colorblind", # change to colorblind, gray, Fried, classic, Reddit, Borkulo
curveAll = F)
